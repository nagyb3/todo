/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("function Todo(title, priority) {\r\n    this.title = title;\r\n    this.priority = Number(priority);\r\n    this.completed = false;\r\n    this.changeCompletedStatus = function() {\r\n        if (this.completed === false) {\r\n            this.completed = true;\r\n        } else if (this.completed === true) {\r\n            this.completed = false;\r\n        }\r\n    }\r\n}\r\n\r\nlet todoArray = [];\r\n\r\nconst myForm = document.querySelector('.myform');\r\nconst myFormDiv = document.querySelector('div.newtodo');\r\n\r\nconst cardsContainer = document.querySelector('.cards-container');\r\n\r\nmyForm.addEventListener('submit', function(e) {\r\n    e.preventDefault();\r\n    todoArray.push(new Todo(e.target[0].value, e.target[2].value));\r\n    myFormDiv.setAttribute('hidden', '');\r\n    cardsContainer.appendChild(cardDOMStuff(todoArray.length - 1));\r\n    myForm.reset();\r\n});\r\n\r\nconst addButton = document.querySelector('button.add');\r\n\r\naddButton.addEventListener('click', () => {\r\n    updateSelectCategory();\r\n    myFormDiv.removeAttribute('hidden');\r\n});\r\n\r\nfunction refreshCards() {\r\n    cardsContainer.textContent = '';\r\n    for (let i = 0; i < todoArray.length; i++) {\r\n        let card = document.createElement('div');\r\n        card.classList.add('card');\r\n        let priorityCircle = document.createElement('span');\r\n        priorityCircle.classList.add('priority-circle');\r\n        if (todoArray[i].priority === 1) {\r\n            priorityCircle.style.backgroundColor = 'red';\r\n        } else if (todoArray[i].priority === 2) {\r\n            priorityCircle.style.backgroundColor = 'orange';\r\n        } else if (todoArray[i].priority === 3) {\r\n            priorityCircle.style.backgroundColor = 'green';\r\n        }\r\n        card.appendChild(priorityCircle);\r\n\r\n        let cardTitle = document.createElement('p');\r\n        cardTitle.classList.add('card-title');\r\n        cardTitle.textContent = todoArray[i].title;\r\n        cardTitle.addEventListener('click', () => {\r\n            if (todoArray[i].completed === false) {\r\n                cardTitle.style.textDecoration = 'line-through';\r\n                todoArray[i].changeCompletedStatus();\r\n            } else {\r\n                cardTitle.style.textDecoration = 'none';\r\n                todoArray[i].changeCompletedStatus();\r\n            }\r\n        })\r\n        card.appendChild(cardTitle);\r\n\r\n\r\n        let deleteButton = document.createElement('button');\r\n        deleteButton.textContent = 'X';\r\n        deleteButton.classList.add('delete-button');\r\n        deleteButton.addEventListener('click', () => {\r\n            todoArray.splice(i, 1);\r\n            refreshCards()\r\n        })\r\n        card.appendChild(deleteButton);\r\n\r\n        cardsContainer.appendChild(card);\r\n\r\n    }\r\n}\r\n\r\nfunction cardDOMStuff(i) {\r\n    let card = document.createElement('div');\r\n    card.classList.add('card');\r\n    let priorityCircle = document.createElement('span');\r\n    priorityCircle.classList.add('priority-circle');\r\n    if (todoArray[i].priority === 1) {\r\n        priorityCircle.style.backgroundColor = 'red';\r\n    } else if (todoArray[i].priority === 2) {\r\n        priorityCircle.style.backgroundColor = 'orange';\r\n    } else if (todoArray[i].priority === 3) {\r\n        priorityCircle.style.backgroundColor = 'green';\r\n    }\r\n    card.appendChild(priorityCircle);\r\n\r\n    let cardTitle = document.createElement('p');\r\n    cardTitle.classList.add('card-title');\r\n    cardTitle.textContent = todoArray[i].title;\r\n    cardTitle.addEventListener('click', () => {\r\n        if (todoArray[i].completed === false) {\r\n            cardTitle.style.textDecoration = 'line-through';\r\n            todoArray[i].changeCompletedStatus();\r\n        } else {\r\n            cardTitle.style.textDecoration = 'none';\r\n            todoArray[i].changeCompletedStatus();\r\n        }\r\n\r\n    })\r\n    card.appendChild(cardTitle);\r\n\r\n\r\n    let deleteButton = document.createElement('button');\r\n    deleteButton.textContent = 'X';\r\n    deleteButton.classList.add('delete-button');\r\n    deleteButton.addEventListener('click', () => {\r\n        todoArray.splice(i, 1);\r\n        refreshCards()\r\n    })\r\n    card.appendChild(deleteButton);\r\n\r\n    return card\r\n}\r\n\r\nconst newCategoryForm = document.querySelector('form.new-category');\r\nconst newCategoryDiv = document.querySelector('div.new-category-form');\r\nconst allCategoryDiv = document.querySelector('.sidebar > .container');\r\nconst addNewCategoryButton = document.querySelector('button.newcategory');\r\n\r\nlet categoryArray = ['All', 'Default'];\r\n\r\nnewCategoryForm.addEventListener('submit', function(e) {\r\n    e.preventDefault();\r\n    categoryArray.push(e.target[0].value);\r\n    newCategoryDiv.setAttribute('hidden', '');\r\n    newCategoryForm.reset();\r\n    refreshCategories();\r\n    newCategoryDiv.setAttribute('hidden', '');\r\n});\r\n\r\nfunction refreshCategories() {\r\n    allCategoryDiv.textContent = '';\r\n    for (let i = 0; i < categoryArray.length; i++) {\r\n        let nextElement = document.createElement('h2');\r\n        nextElement.textContent = categoryArray[i];\r\n        allCategoryDiv.appendChild(nextElement)\r\n    }\r\n}\r\n\r\naddNewCategoryButton.addEventListener('click', () => {\r\n    newCategoryDiv.removeAttribute('hidden');\r\n})\r\n\r\nconst selectCategory = document.querySelector('#select-category');\r\n\r\nfunction updateSelectCategory() {\r\n    selectCategory.textContent = '';\r\n    for (let i = 1; i < categoryArray.length; i++) {\r\n        let nextCategory = document.createElement('option');\r\n        nextCategory.setAttribute('value', categoryArray[i]);\r\n        nextCategory.textContent = categoryArray[i];\r\n        selectCategory.appendChild(nextCategory);\r\n    }\r\n}\r\n\r\nconst closeNewTodoButton = document.querySelector('.close-new-todo');\r\n\r\ncloseNewTodoButton.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    myFormDiv.setAttribute('hidden', '');\r\n})\r\n\r\nconst closeNewCategory = document.querySelector('.close-new-category');\r\n\r\ncloseNewCategory.addEventListener('click', () => {\r\n    newCategoryDiv.setAttribute('hidden', '');\r\n})\n\n//# sourceURL=webpack://todo/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;